{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 🤔$\\exp(-x)$ と $\\mathrm{e}^{-x}$ って"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 事前に必要な知識\n",
    "\n",
    "高校数学だいぶ忘れているマン。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 指数関数 (exponential function)\n",
    "\n",
    ">【指数関数で覚えておくべき３つのこと】\n",
    "> \n",
    "> ★指数関数の定義は $y=a^x$  \n",
    "> ★実数となる $a$ のことを**底**と呼ぶ  \n",
    "> ★指数関数では基本的に $a \\neq 1$ かつ $a > 0$ として考える\n",
    "> \n",
    "> https://juken-mikata.net/how-to/mathematics/shisuukansuu.html\n",
    "\n",
    "$a$ が定数なのが特徴で、逆に指数が定数となっているもの ($y=x^a$) は冪関数(ﾍﾞｷｶﾝｽｳ)という。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 対数\n",
    "\n",
    "$y=a^x$ の $x$ を求めようとしたとき、$a$ を **何乗** したら $y$ になるのか、という意味で、数学的には $x$ を「対数」と呼び、$\\log$ で表す。\n",
    "\n",
    "$$\n",
    "    x = \\log_a y\n",
    "$$\n",
    "\n",
    "指数関数を変形する感じ。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 自然対数\n",
    "\n",
    "底をネイピア数 $\\exp$ とした対数のこと。\n",
    "\n",
    "自然数を使った対数ではなく、数学的に自然なこと、らしい。他の対数と区別するため、$\\ln$で表すことが多い。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 極限\n",
    "\n",
    "> 数列 $\\{a_{n}\\}$ において、項の番号 $n$ が限りなく大きくなっていくとき、$a_{n}$ がある一定の値 $\\alpha$  に限りなく近づいていくならば、数列 $\\{a_{n}\\}$ は $\\alpha$  に収束（しゅうそく）するといい、\n",
    "> \n",
    "> $$\n",
    "    \\lim _{n\\to \\infty }a_{n}=\\alpha\n",
    "$$\n",
    "または簡単に\n",
    "> $$\n",
    "    a_{n}\\to \\alpha \\ (n\\to \\infty )\n",
    "$$\n",
    "とかく。また、$ \\alpha$ をこの数列の極限値（きょくげんち）という。\n",
    "> https://ja.wikibooks.org/wiki/%E9%AB%98%E7%AD%89%E5%AD%A6%E6%A0%A1%E6%95%B0%E5%AD%A6III/%E6%A5%B5%E9%99%90"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ネイピア数\n",
    "\n",
    "$\\exp$ とか $\\mathrm{e}$ で表すものは **ネイピア数** (Napier's constant) という。$\\pi$ と同じ無限に続く「無理数」であり、多項式で$0$を満たすものがないことから「超越数」の1つでもある。(無理数、超越数の話はひとまずおいておく)\n",
    "\n",
    "またネイピア数は「自然対数の底」と呼ばれる数字で、数学的におもしろい性質をもつ定数である。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 定義\n",
    "\n",
    "$$\n",
    "    \\mathrm{e} = \\lim_{x \\to \\infty} \\left(\n",
    "        1 + \\frac{1}{n}\n",
    "    \\right)^n\n",
    "$$\n",
    "\n",
    "$(1 + \\frac{1}{n})^n$ は大きくなると、 $\\mathrm{e}$ の値に収束することを意味している。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 例\n",
    "\n",
    "なんのこっちゃなので、$\n",
    "    \\mathrm{e} = \\lim_{x \\to \\infty} \\left(\n",
    "        1 + \\frac{1}{n}\n",
    "    \\right)^n\n",
    "$ を具体的に当てはめていこう。\n",
    "\n",
    "※ 説明の参考: https://qiita.com/yaju/items/093854baa667a40f9e04"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Exp(n):\n",
    "    return (1.0 + 1.0 / n) ** n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.0"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Exp(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.25"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Exp(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.37037037037037"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Exp(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.613035290224676"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Exp(12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.7145674820219727"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Exp(365)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.718281398200237"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Exp(3153600)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "と、$e=2.71828182845904⋯$に近づくのがわかる。"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
